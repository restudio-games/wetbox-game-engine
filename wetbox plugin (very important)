plugin .1

Scratch-style Blocks with Drag & Drop<

---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scratch-style Blocks with Drag & Drop</title>
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.0/Sortable.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
            margin: 0;
            overflow: hidden;
            display: flex;
            flex-direction: column;
            height: 100vh;
            background-color: #f0f0f0;
        }

        h1, p {
            text-align: center;
            padding: 10px;
            margin: 0;
            color: #333;
        }

        .workspace-container {
            flex-grow: 1;
            overflow: auto;
            position: relative;
            background-color: #ffffff;
            border-top: 1px solid #e0e0e0;
            border-bottom: 1px solid #e0e0e0;
            cursor: grab;
        }

        .workspace-grid {
            min-width: 2500px;
            min-height: 2500px;
            background-image:
                linear-gradient(to right, #e0e0e0 1px, transparent 1px),
                linear-gradient(to bottom, #e0e0e0 1px, transparent 1px);
            background-size: 50px 50px;
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        .scratch-block-container {
            display: flex;
            flex-direction: column;
            gap: 25px;
            padding: 50px;
            position: absolute;
            top: 100px;
            left: 100px;
            z-index: 1;
            min-height: calc(100% - 100px);
            min-width: calc(100% - 100px);
        }

        .scratch-block {
            padding: 10px 15px;
            color: white;
            font-weight: bold;
            display: flex;
            align-items: center;
            position: relative;
            cursor: grab;
            box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.2);
            transition: transform 0.1s ease-in-out;
            max-width: fit-content;
            line-height: 1.5;
            border-radius: 8px;
            min-height: 30px;
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }

        .scratch-block:active {
            transform: scale(1.02);
            cursor: grabbing;
        }

        /* Different block colors for variety - Closer to Scratch palette */
        .block-motion { background-color: #4C97FF; border: 1px solid #3d7ad6; }
        .block-looks { background-color: #9966FF; border: 1px solid #7a52cc; }
        .block-events { background-color: #FFD43B; border: 1px solid #ccaa2f; }
        .block-control { background-color: #FFAB19; border: 1px solid #cc8914; }
        .block-sensing { background-color: #5CB6DA; border: 1px solid #4a93b0; }
        .block-operators { background-color: #40BF4A; border: 1px solid #33993d; }
        .block-variables { background-color: #FF8C1A; border: 1px solid #cc7015; }

        /* Connectors for the blocks (simplified visual) - Much improved! */
        .scratch-block::before {
            content: '';
            position: absolute;
            top: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 25px;
            height: 15px;
            background-color: inherit;
            border-bottom-left-radius: 10px;
            border-bottom-right-radius: 10px;
            box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.2);
            z-index: -1;
        }

        .scratch-block::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 25px;
            height: 15px;
            background-color: inherit;
            border-top-left-radius: 10px;
            border-top-right-radius: 10px;
            box-shadow: inset 0 -3px 5px rgba(0, 0, 0, 0.2);
            z-index: -1;
        }

        /* Adjust the first and last block to not have the top/bottom connector */
        .scratch-block:first-child {
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
        }
        .scratch-block:first-child::before {
            display: none;
        }

        .scratch-block:last-child {
            border-bottom-left-radius: 8px;
            border-bottom-right-radius: 8px;
        }
        .scratch-block:last-child::after {
            display: none;
        }

        /* Input field styling */
        .scratch-block input[type="number"],
        .scratch-block input[type="text"] {
            width: 60px;
            padding: 4px 6px;
            border: none;
            border-radius: 4px;
            background-color: rgba(255, 255, 255, 0.4);
            color: white;
            font-weight: bold;
            margin: 0 5px;
            text-align: center;
            font-size: 0.9em;
            outline: none;
            -webkit-user-select: text;
            -moz-user-select: text;
            -ms-user-select: text;
            user-select: text;
        }

        .scratch-block input[type="number"]::placeholder,
        .scratch-block input[type="text"]::placeholder {
            color: rgba(255, 255, 255, 0.8);
        }

        .scratch-block select {
            padding: 4px 6px;
            border: none;
            border-radius: 4px;
            background-color: rgba(255, 255, 255, 0.4);
            color: white;
            font-weight: bold;
            margin: 0 5px;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            background-image: url('data:image/svg+xml;utf8,<svg fill="white" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>');
            background-repeat: no-repeat;
            background-position: right 5px center;
            background-size: 15px;
            cursor: pointer;
            font-size: 0.9em;
            outline: none;
            -webkit-user-select: text;
            -moz-user-select: text;
            -ms-user-select: text;
            user-select: text;
        }
    </style>
</head>
<body>

    <h1>Scratch-style Blocks</h1>
    <p>Drag and drop these blocks to build your program!</p>

    <div class="workspace-container">
        <div class="workspace-grid"></div>
        <div id="scratchBlocksArea" class="scratch-block-container">
            <div class="scratch-block block-events">
                When <i class="fas fa-flag" style="margin: 0 5px;"></i> clicked
            </div>
            <div class="scratch-block block-motion">
                move <input type="number" value="10"> steps
            </div>
            <div class="scratch-block block-looks">
                say hello for <input type="number" value="2"> seconds
            </div>
            <div class="scratch-block block-control">
                repeat <input type="number" value="10"> times
            </div>
            <div class="scratch-block block-motion">
                turn <input type="number" value="15"> degrees <span style="font-size: 1.2em;">&#8634;</span>
            </div>
            <div class="scratch-block block-sensing">
                touching mouse-pointer?
            </div>
            <div class="scratch-block block-operators">
                <input type="number" value="5"> + <input type="number" value="3">
            </div>
            <div class="scratch-block block-variables">
                set <input type="text" value="score"> to <input type="number" value="0">
            </div>
            <div class="scratch-block block-control">
                if <select>
                    <option value="true">true</option>
                    <option value="false">false</option>
                </select>
                then
            </div>
            <div class="scratch-block block-looks">
                switch costume to
                <select>
                    <option value="costume1">costume1</option>
                    <option value="costume2">costume2</option>
                </select>
            </div>
        </div>
    </div>

    <script>
        var el = document.getElementById('scratchBlocksArea');

        var sortable = Sortable.create(el, {
            animation: 150,
            ghostClass: 'sortable-ghost',
            handle: '.scratch-block',
            filter: 'input, select',
            preventOnFilter: false
        });

        document.addEventListener('selectstart', function(e) {
            if (e.target.tagName === 'INPUT' || e.target.tagName === 'TEXTAREA' || e.target.tagName === 'SELECT') {
                return true;
            }
            e.preventDefault();
        });
    </script>

</body>
</html>

plugin .2

(visual scripting)



---

